// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebScraperApi.Data;

#nullable disable

namespace WebScraperApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebScraperApi.Data.Entities.ScraperConfigEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AdjustDepthBasedOnQuality")
                        .HasColumnType("boolean");

                    b.Property<bool>("AutoLearnHeaderFooter")
                        .HasColumnType("boolean");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DelayBetweenRequests")
                        .HasColumnType("integer");

                    b.Property<bool>("EnableAdaptiveCrawling")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableAdaptiveRateLimiting")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableChangeDetection")
                        .HasColumnType("boolean");

                    b.Property<bool>("EnableContinuousMonitoring")
                        .HasColumnType("boolean");

                    b.Property<bool>("FollowExternalLinks")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastRun")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LearningPagesCount")
                        .HasColumnType("integer");

                    b.Property<int>("MaxConcurrentRequests")
                        .HasColumnType("integer");

                    b.Property<int>("MaxDelayBetweenRequests")
                        .HasColumnType("integer");

                    b.Property<int>("MaxDepth")
                        .HasColumnType("integer");

                    b.Property<int>("MaxVersionsToKeep")
                        .HasColumnType("integer");

                    b.Property<int>("MinDelayBetweenRequests")
                        .HasColumnType("integer");

                    b.Property<bool>("MonitorResponseTimes")
                        .HasColumnType("boolean");

                    b.Property<int>("MonitoringIntervalMinutes")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("NotifyOnChanges")
                        .HasColumnType("boolean");

                    b.Property<string>("NotificationEmail")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("OutputDirectory")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("OwnerId")
                        .HasColumnType("text");

                    b.Property<int>("PriorityQueueSize")
                        .HasColumnType("integer");

                    b.Property<bool>("RespectRobotsTxt")
                        .HasColumnType("boolean");

                    b.Property<string>("StartUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<bool>("TrackChangesHistory")
                        .HasColumnType("boolean");

                    b.Property<bool>("TrackContentVersions")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("ScraperConfigs");
                });

            modelBuilder.Entity("WebScraperApi.Data.Entities.LogEntryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Level")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ScraperConfigId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ScraperConfigId");

                    b.ToTable("ScraperLogs");
                });

            modelBuilder.Entity("WebScraperApi.Data.Entities.ScraperRunEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ElapsedTime")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text");

                    b.Property<Guid>("ScraperConfigId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Successful")
                        .HasColumnType("boolean");

                    b.Property<int>("UrlsProcessed")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ScraperConfigId");

                    b.ToTable("ScraperRuns");
                });

            modelBuilder.Entity("WebScraperApi.Data.Entities.LogEntryEntity", b =>
                {
                    b.HasOne("WebScraperApi.Data.Entities.ScraperConfigEntity", "ScraperConfig")
                        .WithMany("LogEntries")
                        .HasForeignKey("ScraperConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScraperConfig");
                });

            modelBuilder.Entity("WebScraperApi.Data.Entities.ScraperRunEntity", b =>
                {
                    b.HasOne("WebScraperApi.Data.Entities.ScraperConfigEntity", "ScraperConfig")
                        .WithMany("Runs")
                        .HasForeignKey("ScraperConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ScraperConfig");
                });

            modelBuilder.Entity("WebScraperApi.Data.Entities.ScraperConfigEntity", b =>
                {
                    b.Navigation("LogEntries");

                    b.Navigation("Runs");
                });
#pragma warning restore 612, 618
        }
    }
}
